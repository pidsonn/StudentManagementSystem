{
    "sourceFile": "src/main/java/pms/main/StudentManagementSystem.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1734511340922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734511518287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n package pms.main;\n \n-import java.util.InputMismatchException;\n+\n import java.util.Scanner;\n \n \n import pms.student.Student;\n"
                },
                {
                    "date": 1734511739166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,10 @@\n package pms.main;\n \n \n+\n+\n+import java.util.InputMismatchException;\n import java.util.Scanner;\n \n \n import pms.student.Student;\n"
                },
                {
                    "date": 1734511802603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,111 +16,86 @@\n     public static void main(String[] args) {\n         StudentManagement sm = new StudentManagement();\n         System.out.println(\"STUDENT MANAGEMENT SYSTEM:\");\n \n-      while (true) {\n+     while (true) {\n          System.out.println(\"\\n MENU\");\n          System.out.println(\"1: Add new student.\");\n          System.out.println(\"2: View all students.\");\n          System.out.println(\"3: Update student details.\");\n          System.out.println(\"4: Delete a student.\");\n          System.out.println(\"5: Search for a student.\");\n+         System.out.println(\"6: Sort students(by Name or Grade.\");\n+         System.out.println(\"7: Save records to file.\");\n+         System.out.println(\"8: Load records from file.\");\n          System.out.println(\"9: Exit program.\");\n          System.out.print(\"Enter your selection: \");\n+\n+       try{\n          \n          int sel = console.nextInt();\n      \n          switch (sel) {\n-             case 1:\n-                 System.out.println(\"Add student\");\n-                 System.out.print(\"Enter student name: \");\n-                 String name = console.next();\n-                 System.out.print(\"Enter student age: \");\n-                 int age = console.nextInt();\n-                 System.out.print(\"Enter student grade: \");\n-                 String grade = console.next();\n+            \n+             case 6:\n+                  System.out.println(\"Sort students by:\");\n+                  System.out.println(\"1: name\");\n+                  System.out.println(\"2: Grade\");\n+                  System.out.print(\"Enter you choice:\");\n+                  int sortChoice = console.nextInt();\n+\n+                  if(sortChoice ==1){\n+                    sm.sortByName();\n+                  }\n+                  else if(sortChoice ==2){\n+                    sm.sortByGrade();\n+                  }\n+                  else{\n+                    System.out.println(\"Invalid choice\");\n+                  }\n+                  break;\n+\n+                  case 7:\n+                    System.out.print(\"Enter the file Name to save:\");\n+                    String saveFile = console.next();\n+                    sm.saveToFile(saveFile);\n+                    break;\n+\n+                  case 8:\n+                    System.out.print(\"Enter the file name to load:\");\n+                    String loadFile = console.next();\n+                    StudentManagement.loadFromFile(loadFile);\n+                    break;\n+\n+\n+                  case 9:\n+                      System.out.println(\"Thank you for using the Student Management application!\");\n+                      console.close();\n+                      System.exit(0);\n+                      break;\n+                    \n+                 default:\n+                      System.out.println(\"Invalid selection. Please choose a valid option\");\n+                     break;\n+                }\n+        }\n+                \n+\n+                 catch(InputMismatchException e){\n+                    System.out.println(\"Invalid input. Please enter a valid numeric ID\");\n+                   console.nextLine();  // Clear invalid input\n+                   }\n+                }\n+            \n+        \n+                \n+\n+             \n      \n-                 Student st = new Student(age, name, grade);\n-                 boolean ans = sm.insertStudent(st);\n-                 if (ans) {\n-                     System.out.println(\"Record inserted successfully!\");\n-                 } else {\n-                     System.out.println(\"Something went wrong. Please, try again.\");\n-                 }\n-                 break;\n+             \n      \n-             case 2:\n-                 System.out.println(\"View all students\");\n-                 sm.showAllStudents();\n-                 break;\n-     \n-             case 3:\n-                 System.out.println(\"Update student details\");\n-                 System.out.println(\"\\n 1: Update name\"\n-                                    + \"\\n 2: Update age\"\n-                                    + \"\\n 3: Update grade\");\n-                 System.out.print(\"Enter your choice: \");\n-                 int choice = console.nextInt();\n-     \n-                 System.out.print(\"Enter student ID to update: \");\n-                 int id = console.nextInt();\n-     \n-                 boolean updateSuccess = false;\n-                 if (choice == 1) {\n-                     System.out.print(\"Enter new name: \");\n-                     String newName = console.next();\n-                     updateSuccess = sm.update(id, newName,choice,  new Student());\n-                 } else if (choice == 2) {\n-                     System.out.print(\"Enter new age: \");\n-                     int newAge = console.nextInt();\n-                     updateSuccess = sm.update(id, String.valueOf(newAge),choice, new Student());\n-                 } else if (choice == 3) {\n-                     System.out.print(\"Enter new grade: \");\n-                     String newGrade = console.next();\n-                     updateSuccess = sm.update(id, newGrade, choice, new Student());\n-                 }\n-     \n-                 if (updateSuccess) {\n-                     System.out.println(\"Update successful!\");\n-                 } else {\n-                     System.out.println(\"Something went wrong. Please, try again.\");\n-                 }\n-                 break;\n-     \n-             case 4:\n-                 System.out.println(\"Delete a student\");\n-                 System.out.print(\"Enter the ID to delete: \");\n-                 id = console.nextInt();\n-                 boolean deleteSuccess = sm.delete(id);\n-     \n-                 if (deleteSuccess) {\n-                     System.out.println(\"The record deleted successfully!\");\n-                 } else {\n-                     System.out.println(\"Something went wrong. Please, try again.\");\n-                 }\n-                 break;\n-     \n-             case 5:\n-                 System.out.println(\"Search for a student\");\n-                 System.out.print(\"Enter the ID: \");\n-                 id = console.nextInt();\n-                 boolean found = sm.searchForStudent(id);\n-     \n-                 if (!found) {\n-                     System.out.println(\"Student with this ID is not available in our system.\");\n-                 }\n-                 break;\n-     \n-             case 9:\n-                 System.out.println(\"Thank you for using Student Management Application!\");\n-                 System.exit(0);\n-                 break;\n-     \n-             default:\n-                 System.out.println(\"Invalid selection. Please try again.\");\n-                  break;\n-                }\n-         }\n+             \n+         \n     }\n }\n \n    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1734511879700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,5 +97,7 @@\n          \n     }\n }\n \n+\n+   \n    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1734511894625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,7 @@\n package pms.main;\n \n \n-\n-\n-import java.util.InputMismatchException;\n import java.util.Scanner;\n \n \n import pms.student.Student;\n@@ -16,88 +13,111 @@\n     public static void main(String[] args) {\n         StudentManagement sm = new StudentManagement();\n         System.out.println(\"STUDENT MANAGEMENT SYSTEM:\");\n \n-     while (true) {\n+      while (true) {\n          System.out.println(\"\\n MENU\");\n          System.out.println(\"1: Add new student.\");\n          System.out.println(\"2: View all students.\");\n          System.out.println(\"3: Update student details.\");\n          System.out.println(\"4: Delete a student.\");\n          System.out.println(\"5: Search for a student.\");\n-         System.out.println(\"6: Sort students(by Name or Grade.\");\n-         System.out.println(\"7: Save records to file.\");\n-         System.out.println(\"8: Load records from file.\");\n          System.out.println(\"9: Exit program.\");\n          System.out.print(\"Enter your selection: \");\n-\n-       try{\n          \n          int sel = console.nextInt();\n      \n          switch (sel) {\n-            \n-             case 6:\n-                  System.out.println(\"Sort students by:\");\n-                  System.out.println(\"1: name\");\n-                  System.out.println(\"2: Grade\");\n-                  System.out.print(\"Enter you choice:\");\n-                  int sortChoice = console.nextInt();\n-\n-                  if(sortChoice ==1){\n-                    sm.sortByName();\n-                  }\n-                  else if(sortChoice ==2){\n-                    sm.sortByGrade();\n-                  }\n-                  else{\n-                    System.out.println(\"Invalid choice\");\n-                  }\n+             case 1:\n+                 System.out.println(\"Add student\");\n+                 System.out.print(\"Enter student name: \");\n+                 String name = console.next();\n+                 System.out.print(\"Enter student age: \");\n+                 int age = console.nextInt();\n+                 System.out.print(\"Enter student grade: \");\n+                 String grade = console.next();\n+     \n+                 Student st = new Student(age, name, grade);\n+                 boolean ans = sm.insertStudent(st);\n+                 if (ans) {\n+                     System.out.println(\"Record inserted successfully!\");\n+                 } else {\n+                     System.out.println(\"Something went wrong. Please, try again.\");\n+                 }\n+                 break;\n+     \n+             case 2:\n+                 System.out.println(\"View all students\");\n+                 sm.showAllStudents();\n+                 break;\n+     \n+             case 3:\n+                 System.out.println(\"Update student details\");\n+                 System.out.println(\"\\n 1: Update name\"\n+                                    + \"\\n 2: Update age\"\n+                                    + \"\\n 3: Update grade\");\n+                 System.out.print(\"Enter your choice: \");\n+                 int choice = console.nextInt();\n+     \n+                 System.out.print(\"Enter student ID to update: \");\n+                 int id = console.nextInt();\n+     \n+                 boolean updateSuccess = false;\n+                 if (choice == 1) {\n+                     System.out.print(\"Enter new name: \");\n+                     String newName = console.next();\n+                     updateSuccess = sm.update(id, newName,choice,  new Student());\n+                 } else if (choice == 2) {\n+                     System.out.print(\"Enter new age: \");\n+                     int newAge = console.nextInt();\n+                     updateSuccess = sm.update(id, String.valueOf(newAge),choice, new Student());\n+                 } else if (choice == 3) {\n+                     System.out.print(\"Enter new grade: \");\n+                     String newGrade = console.next();\n+                     updateSuccess = sm.update(id, newGrade, choice, new Student());\n+                 }\n+     \n+                 if (updateSuccess) {\n+                     System.out.println(\"Update successful!\");\n+                 } else {\n+                     System.out.println(\"Something went wrong. Please, try again.\");\n+                 }\n+                 break;\n+     \n+             case 4:\n+                 System.out.println(\"Delete a student\");\n+                 System.out.print(\"Enter the ID to delete: \");\n+                 id = console.nextInt();\n+                 boolean deleteSuccess = sm.delete(id);\n+     \n+                 if (deleteSuccess) {\n+                     System.out.println(\"The record deleted successfully!\");\n+                 } else {\n+                     System.out.println(\"Something went wrong. Please, try again.\");\n+                 }\n+                 break;\n+     \n+             case 5:\n+                 System.out.println(\"Search for a student\");\n+                 System.out.print(\"Enter the ID: \");\n+                 id = console.nextInt();\n+                 boolean found = sm.searchForStudent(id);\n+     \n+                 if (!found) {\n+                     System.out.println(\"Student with this ID is not available in our system.\");\n+                 }\n+                 break;\n+     \n+             case 9:\n+                 System.out.println(\"Thank you for using Student Management Application!\");\n+                 System.exit(0);\n+                 break;\n+     \n+             default:\n+                 System.out.println(\"Invalid selection. Please try again.\");\n                   break;\n-\n-                  case 7:\n-                    System.out.print(\"Enter the file Name to save:\");\n-                    String saveFile = console.next();\n-                    sm.saveToFile(saveFile);\n-                    break;\n-\n-                  case 8:\n-                    System.out.print(\"Enter the file name to load:\");\n-                    String loadFile = console.next();\n-                    StudentManagement.loadFromFile(loadFile);\n-                    break;\n-\n-\n-                  case 9:\n-                      System.out.println(\"Thank you for using the Student Management application!\");\n-                      console.close();\n-                      System.exit(0);\n-                      break;\n-                    \n-                 default:\n-                      System.out.println(\"Invalid selection. Please choose a valid option\");\n-                     break;\n                 }\n-        }\n-                \n-\n-                 catch(InputMismatchException e){\n-                    System.out.println(\"Invalid input. Please enter a valid numeric ID\");\n-                   console.nextLine();  // Clear invalid input\n-                   }\n-                }\n-            \n-        \n-                \n-\n-             \n-     \n-             \n-     \n-             \n-         \n+         }\n     }\n }\n \n-\n-   \n    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1734512011335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n \n import java.util.Scanner;\n \n \n-import pms.student.Student;\n import pms.studentmanagement.StudentManagement;\n \n public class StudentManagementSystem {\n     static Scanner console = new Scanner(System.in);\n"
                },
                {
                    "date": 1734512059473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,111 +12,86 @@\n     public static void main(String[] args) {\n         StudentManagement sm = new StudentManagement();\n         System.out.println(\"STUDENT MANAGEMENT SYSTEM:\");\n \n-      while (true) {\n+     while (true) {\n          System.out.println(\"\\n MENU\");\n          System.out.println(\"1: Add new student.\");\n          System.out.println(\"2: View all students.\");\n          System.out.println(\"3: Update student details.\");\n          System.out.println(\"4: Delete a student.\");\n          System.out.println(\"5: Search for a student.\");\n+         System.out.println(\"6: Sort students(by Name or Grade.\");\n+         System.out.println(\"7: Save records to file.\");\n+         System.out.println(\"8: Load records from file.\");\n          System.out.println(\"9: Exit program.\");\n          System.out.print(\"Enter your selection: \");\n+\n+       try{\n          \n          int sel = console.nextInt();\n      \n          switch (sel) {\n-             case 1:\n-                 System.out.println(\"Add student\");\n-                 System.out.print(\"Enter student name: \");\n-                 String name = console.next();\n-                 System.out.print(\"Enter student age: \");\n-                 int age = console.nextInt();\n-                 System.out.print(\"Enter student grade: \");\n-                 String grade = console.next();\n+            \n+             case 6:\n+                  System.out.println(\"Sort students by:\");\n+                  System.out.println(\"1: name\");\n+                  System.out.println(\"2: Grade\");\n+                  System.out.print(\"Enter you choice:\");\n+                  int sortChoice = console.nextInt();\n+\n+                  if(sortChoice ==1){\n+                    sm.sortByName();\n+                  }\n+                  else if(sortChoice ==2){\n+                    sm.sortByGrade();\n+                  }\n+                  else{\n+                    System.out.println(\"Invalid choice\");\n+                  }\n+                  break;\n+\n+                  case 7:\n+                    System.out.print(\"Enter the file Name to save:\");\n+                    String saveFile = console.next();\n+                    sm.saveToFile(saveFile);\n+                    break;\n+\n+                  case 8:\n+                    System.out.print(\"Enter the file name to load:\");\n+                    String loadFile = console.next();\n+                    StudentManagement.loadFromFile(loadFile);\n+                    break;\n+\n+\n+                  case 9:\n+                      System.out.println(\"Thank you for using the Student Management application!\");\n+                      console.close();\n+                      System.exit(0);\n+                      break;\n+                    \n+                 default:\n+                      System.out.println(\"Invalid selection. Please choose a valid option\");\n+                     break;\n+                }\n+        }\n+                \n+\n+                 catch(InputMismatchException e){\n+                    System.out.println(\"Invalid input. Please enter a valid numeric ID\");\n+                   console.nextLine();  // Clear invalid input\n+                   }\n+                }\n+            \n+        \n+                \n+\n+             \n      \n-                 Student st = new Student(age, name, grade);\n-                 boolean ans = sm.insertStudent(st);\n-                 if (ans) {\n-                     System.out.println(\"Record inserted successfully!\");\n-                 } else {\n-                     System.out.println(\"Something went wrong. Please, try again.\");\n-                 }\n-                 break;\n+             \n      \n-             case 2:\n-                 System.out.println(\"View all students\");\n-                 sm.showAllStudents();\n-                 break;\n-     \n-             case 3:\n-                 System.out.println(\"Update student details\");\n-                 System.out.println(\"\\n 1: Update name\"\n-                                    + \"\\n 2: Update age\"\n-                                    + \"\\n 3: Update grade\");\n-                 System.out.print(\"Enter your choice: \");\n-                 int choice = console.nextInt();\n-     \n-                 System.out.print(\"Enter student ID to update: \");\n-                 int id = console.nextInt();\n-     \n-                 boolean updateSuccess = false;\n-                 if (choice == 1) {\n-                     System.out.print(\"Enter new name: \");\n-                     String newName = console.next();\n-                     updateSuccess = sm.update(id, newName,choice,  new Student());\n-                 } else if (choice == 2) {\n-                     System.out.print(\"Enter new age: \");\n-                     int newAge = console.nextInt();\n-                     updateSuccess = sm.update(id, String.valueOf(newAge),choice, new Student());\n-                 } else if (choice == 3) {\n-                     System.out.print(\"Enter new grade: \");\n-                     String newGrade = console.next();\n-                     updateSuccess = sm.update(id, newGrade, choice, new Student());\n-                 }\n-     \n-                 if (updateSuccess) {\n-                     System.out.println(\"Update successful!\");\n-                 } else {\n-                     System.out.println(\"Something went wrong. Please, try again.\");\n-                 }\n-                 break;\n-     \n-             case 4:\n-                 System.out.println(\"Delete a student\");\n-                 System.out.print(\"Enter the ID to delete: \");\n-                 id = console.nextInt();\n-                 boolean deleteSuccess = sm.delete(id);\n-     \n-                 if (deleteSuccess) {\n-                     System.out.println(\"The record deleted successfully!\");\n-                 } else {\n-                     System.out.println(\"Something went wrong. Please, try again.\");\n-                 }\n-                 break;\n-     \n-             case 5:\n-                 System.out.println(\"Search for a student\");\n-                 System.out.print(\"Enter the ID: \");\n-                 id = console.nextInt();\n-                 boolean found = sm.searchForStudent(id);\n-     \n-                 if (!found) {\n-                     System.out.println(\"Student with this ID is not available in our system.\");\n-                 }\n-                 break;\n-     \n-             case 9:\n-                 System.out.println(\"Thank you for using Student Management Application!\");\n-                 System.exit(0);\n-                 break;\n-     \n-             default:\n-                 System.out.println(\"Invalid selection. Please try again.\");\n-                  break;\n-                }\n-         }\n+             \n+         \n     }\n }\n \n    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1734512818686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n \n import java.util.Scanner;\n \n \n+import pms.student.Student;\n import pms.studentmanagement.StudentManagement;\n \n public class StudentManagementSystem {\n     static Scanner console = new Scanner(System.in);\n@@ -12,86 +13,111 @@\n     public static void main(String[] args) {\n         StudentManagement sm = new StudentManagement();\n         System.out.println(\"STUDENT MANAGEMENT SYSTEM:\");\n \n-     while (true) {\n+      while (true) {\n          System.out.println(\"\\n MENU\");\n          System.out.println(\"1: Add new student.\");\n          System.out.println(\"2: View all students.\");\n          System.out.println(\"3: Update student details.\");\n          System.out.println(\"4: Delete a student.\");\n          System.out.println(\"5: Search for a student.\");\n-         System.out.println(\"6: Sort students(by Name or Grade.\");\n-         System.out.println(\"7: Save records to file.\");\n-         System.out.println(\"8: Load records from file.\");\n          System.out.println(\"9: Exit program.\");\n          System.out.print(\"Enter your selection: \");\n-\n-       try{\n          \n          int sel = console.nextInt();\n      \n          switch (sel) {\n-            \n-             case 6:\n-                  System.out.println(\"Sort students by:\");\n-                  System.out.println(\"1: name\");\n-                  System.out.println(\"2: Grade\");\n-                  System.out.print(\"Enter you choice:\");\n-                  int sortChoice = console.nextInt();\n-\n-                  if(sortChoice ==1){\n-                    sm.sortByName();\n-                  }\n-                  else if(sortChoice ==2){\n-                    sm.sortByGrade();\n-                  }\n-                  else{\n-                    System.out.println(\"Invalid choice\");\n-                  }\n+             case 1:\n+                 System.out.println(\"Add student\");\n+                 System.out.print(\"Enter student name: \");\n+                 String name = console.next();\n+                 System.out.print(\"Enter student age: \");\n+                 int age = console.nextInt();\n+                 System.out.print(\"Enter student grade: \");\n+                 String grade = console.next();\n+     \n+                 Student st = new Student(age, name, grade);\n+                 boolean ans = sm.insertStudent(st);\n+                 if (ans) {\n+                     System.out.println(\"Record inserted successfully!\");\n+                 } else {\n+                     System.out.println(\"Something went wrong. Please, try again.\");\n+                 }\n+                 break;\n+     \n+             case 2:\n+                 System.out.println(\"View all students\");\n+                 sm.showAllStudents();\n+                 break;\n+     \n+             case 3:\n+                 System.out.println(\"Update student details\");\n+                 System.out.println(\"\\n 1: Update name\"\n+                                    + \"\\n 2: Update age\"\n+                                    + \"\\n 3: Update grade\");\n+                 System.out.print(\"Enter your choice: \");\n+                 int choice = console.nextInt();\n+     \n+                 System.out.print(\"Enter student ID to update: \");\n+                 int id = console.nextInt();\n+     \n+                 boolean updateSuccess = false;\n+                 if (choice == 1) {\n+                     System.out.print(\"Enter new name: \");\n+                     String newName = console.next();\n+                     updateSuccess = sm.update(id, newName,choice,  new Student());\n+                 } else if (choice == 2) {\n+                     System.out.print(\"Enter new age: \");\n+                     int newAge = console.nextInt();\n+                     updateSuccess = sm.update(id, String.valueOf(newAge),choice, new Student());\n+                 } else if (choice == 3) {\n+                     System.out.print(\"Enter new grade: \");\n+                     String newGrade = console.next();\n+                     updateSuccess = sm.update(id, newGrade, choice, new Student());\n+                 }\n+     \n+                 if (updateSuccess) {\n+                     System.out.println(\"Update successful!\");\n+                 } else {\n+                     System.out.println(\"Something went wrong. Please, try again.\");\n+                 }\n+                 break;\n+     \n+             case 4:\n+                 System.out.println(\"Delete a student\");\n+                 System.out.print(\"Enter the ID to delete: \");\n+                 id = console.nextInt();\n+                 boolean deleteSuccess = sm.delete(id);\n+     \n+                 if (deleteSuccess) {\n+                     System.out.println(\"The record deleted successfully!\");\n+                 } else {\n+                     System.out.println(\"Something went wrong. Please, try again.\");\n+                 }\n+                 break;\n+     \n+             case 5:\n+                 System.out.println(\"Search for a student\");\n+                 System.out.print(\"Enter the ID: \");\n+                 id = console.nextInt();\n+                 boolean found = sm.searchForStudent(id);\n+     \n+                 if (!found) {\n+                     System.out.println(\"Student with this ID is not available in our system.\");\n+                 }\n+                 break;\n+     \n+             case 9:\n+                 System.out.println(\"Thank you for using Student Management Application!\");\n+                 System.exit(0);\n+                 break;\n+     \n+             default:\n+                 System.out.println(\"Invalid selection. Please try again.\");\n                   break;\n-\n-                  case 7:\n-                    System.out.print(\"Enter the file Name to save:\");\n-                    String saveFile = console.next();\n-                    sm.saveToFile(saveFile);\n-                    break;\n-\n-                  case 8:\n-                    System.out.print(\"Enter the file name to load:\");\n-                    String loadFile = console.next();\n-                    StudentManagement.loadFromFile(loadFile);\n-                    break;\n-\n-\n-                  case 9:\n-                      System.out.println(\"Thank you for using the Student Management application!\");\n-                      console.close();\n-                      System.exit(0);\n-                      break;\n-                    \n-                 default:\n-                      System.out.println(\"Invalid selection. Please choose a valid option\");\n-                     break;\n                 }\n-        }\n-                \n-\n-                 catch(InputMismatchException e){\n-                    System.out.println(\"Invalid input. Please enter a valid numeric ID\");\n-                   console.nextLine();  // Clear invalid input\n-                   }\n-                }\n-            \n-        \n-                \n-\n-             \n-     \n-             \n-     \n-             \n-         \n+         }\n     }\n }\n \n    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1734512885793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,10 @@\n package pms.main;\n \n \n+\n+\n+import java.util.InputMismatchException;\n import java.util.Scanner;\n \n \n import pms.student.Student;\n"
                },
                {
                    "date": 1734513185067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,8 @@\n import java.util.InputMismatchException;\n import java.util.Scanner;\n \n \n-import pms.student.Student;\n import pms.studentmanagement.StudentManagement;\n \n public class StudentManagementSystem {\n     static Scanner console = new Scanner(System.in);\n"
                },
                {
                    "date": 1734513405181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import java.util.InputMismatchException;\n import java.util.Scanner;\n \n \n+import pms.student.Student;\n import pms.studentmanagement.StudentManagement;\n \n public class StudentManagementSystem {\n     static Scanner console = new Scanner(System.in);\n"
                },
                {
                    "date": 1734513441162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import java.util.InputMismatchException;\n import java.util.Scanner;\n \n \n-import pms.student.Student;\n+\n import pms.studentmanagement.StudentManagement;\n \n public class StudentManagementSystem {\n     static Scanner console = new Scanner(System.in);\n"
                },
                {
                    "date": 1734513455886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+package pms.main;\n+\n+\n+\n+\n+import java.util.InputMismatchException;\n+import java.util.Scanner;\n+\n+import pms.student.Student;\n+import pms.studentmanagement.StudentManagement;\n+\n+public class StudentManagementSystem {\n+    static Scanner console = new Scanner(System.in);\n+\n+    public static void main(String[] args) {\n+        StudentManagement sm = new StudentManagement();\n+        System.out.println(\"STUDENT MANAGEMENT SYSTEM:\");\n+\n+      while (true) {\n+         System.out.println(\"\\n MENU\");\n+         System.out.println(\"1: Add new student.\");\n+         System.out.println(\"2: View all students.\");\n+         System.out.println(\"3: Update student details.\");\n+         System.out.println(\"4: Delete a student.\");\n+         System.out.println(\"5: Search for a student.\");\n+         System.out.println(\"9: Exit program.\");\n+         System.out.print(\"Enter your selection: \");\n+         \n+         int sel = console.nextInt();\n+     \n+         switch (sel) {\n+             case 1:\n+                 System.out.println(\"Add student\");\n+                 System.out.print(\"Enter student name: \");\n+                 String name = console.next();\n+                 System.out.print(\"Enter student age: \");\n+                 int age = console.nextInt();\n+                 System.out.print(\"Enter student grade: \");\n+                 String grade = console.next();\n+     \n+                 Student st = new Student(age, name, grade);\n+                 boolean ans = sm.insertStudent(st);\n+                 if (ans) {\n+                     System.out.println(\"Record inserted successfully!\");\n+                 } else {\n+                     System.out.println(\"Something went wrong. Please, try again.\");\n+                 }\n+                 break;\n+     \n+             case 2:\n+                 System.out.println(\"View all students\");\n+                 sm.showAllStudents();\n+                 break;\n+     \n+             case 3:\n+                 System.out.println(\"Update student details\");\n+                 System.out.println(\"\\n 1: Update name\"\n+                                    + \"\\n 2: Update age\"\n+                                    + \"\\n 3: Update grade\");\n+                 System.out.print(\"Enter your choice: \");\n+                 int choice = console.nextInt();\n+     \n+                 System.out.print(\"Enter student ID to update: \");\n+                 int id = console.nextInt();\n+     \n+                 boolean updateSuccess = false;\n+                 if (choice == 1) {\n+                     System.out.print(\"Enter new name: \");\n+                     String newName = console.next();\n+                     updateSuccess = sm.update(id, newName,choice,  new Student());\n+                 } else if (choice == 2) {\n+                     System.out.print(\"Enter new age: \");\n+                     int newAge = console.nextInt();\n+                     updateSuccess = sm.update(id, String.valueOf(newAge),choice, new Student());\n+                 } else if (choice == 3) {\n+                     System.out.print(\"Enter new grade: \");\n+                     String newGrade = console.next();\n+                     updateSuccess = sm.update(id, newGrade, choice, new Student());\n+                 }\n+     \n+                 if (updateSuccess) {\n+                     System.out.println(\"Update successful!\");\n+                 } else {\n+                     System.out.println(\"Something went wrong. Please, try again.\");\n+                 }\n+                 break;\n+     \n+             case 4:\n+                 System.out.println(\"Delete a student\");\n+                 System.out.print(\"Enter the ID to delete: \");\n+                 id = console.nextInt();\n+                 boolean deleteSuccess = sm.delete(id);\n+     \n+                 if (deleteSuccess) {\n+                     System.out.println(\"The record deleted successfully!\");\n+                 } else {\n+                     System.out.println(\"Something went wrong. Please, try again.\");\n+                 }\n+                 break;\n+     \n+             case 5:\n+                 System.out.println(\"Search for a student\");\n+                 System.out.print(\"Enter the ID: \");\n+                 id = console.nextInt();\n+                 boolean found = sm.searchForStudent(id);\n+     \n+                 if (!found) {\n+                     System.out.println(\"Student with this ID is not available in our system.\");\n+                 }\n+                 break;\n+     \n+             case 9:\n+                 System.out.println(\"Thank you for using Student Management Application!\");\n+                 System.exit(0);\n+                 break;\n+     \n+             default:\n+                 System.out.println(\"Invalid selection. Please try again.\");\n+                  break;\n+                }\n+         }\n+    }\n+}\n+\n+   \n\\ No newline at end of file\n"
                },
                {
                    "date": 1734520999008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,10 @@\n package pms.main;\n \n \n+import java.util.Scanner;\n \n \n-import java.util.InputMismatchException;\n-import java.util.Scanner;\n-\n import pms.student.Student;\n import pms.studentmanagement.StudentManagement;\n \n public class StudentManagementSystem {\n@@ -121,131 +119,5 @@\n          }\n     }\n }\n \n-   \n-package pms.main;\n-\n-\n-\n-\n-import java.util.InputMismatchException;\n-import java.util.Scanner;\n-\n-\n-\n-import pms.studentmanagement.StudentManagement;\n-\n-public class StudentManagementSystem {\n-    static Scanner console = new Scanner(System.in);\n-\n-    public static void main(String[] args) {\n-        StudentManagement sm = new StudentManagement();\n-        System.out.println(\"STUDENT MANAGEMENT SYSTEM:\");\n-\n-      while (true) {\n-         System.out.println(\"\\n MENU\");\n-         System.out.println(\"1: Add new student.\");\n-         System.out.println(\"2: View all students.\");\n-         System.out.println(\"3: Update student details.\");\n-         System.out.println(\"4: Delete a student.\");\n-         System.out.println(\"5: Search for a student.\");\n-         System.out.println(\"9: Exit program.\");\n-         System.out.print(\"Enter your selection: \");\n-         \n-         int sel = console.nextInt();\n-     \n-         switch (sel) {\n-             case 1:\n-                 System.out.println(\"Add student\");\n-                 System.out.print(\"Enter student name: \");\n-                 String name = console.next();\n-                 System.out.print(\"Enter student age: \");\n-                 int age = console.nextInt();\n-                 System.out.print(\"Enter student grade: \");\n-                 String grade = console.next();\n-     \n-                 Student st = new Student(age, name, grade);\n-                 boolean ans = sm.insertStudent(st);\n-                 if (ans) {\n-                     System.out.println(\"Record inserted successfully!\");\n-                 } else {\n-                     System.out.println(\"Something went wrong. Please, try again.\");\n-                 }\n-                 break;\n-     \n-             case 2:\n-                 System.out.println(\"View all students\");\n-                 sm.showAllStudents();\n-                 break;\n-     \n-             case 3:\n-                 System.out.println(\"Update student details\");\n-                 System.out.println(\"\\n 1: Update name\"\n-                                    + \"\\n 2: Update age\"\n-                                    + \"\\n 3: Update grade\");\n-                 System.out.print(\"Enter your choice: \");\n-                 int choice = console.nextInt();\n-     \n-                 System.out.print(\"Enter student ID to update: \");\n-                 int id = console.nextInt();\n-     \n-                 boolean updateSuccess = false;\n-                 if (choice == 1) {\n-                     System.out.print(\"Enter new name: \");\n-                     String newName = console.next();\n-                     updateSuccess = sm.update(id, newName,choice,  new Student());\n-                 } else if (choice == 2) {\n-                     System.out.print(\"Enter new age: \");\n-                     int newAge = console.nextInt();\n-                     updateSuccess = sm.update(id, String.valueOf(newAge),choice, new Student());\n-                 } else if (choice == 3) {\n-                     System.out.print(\"Enter new grade: \");\n-                     String newGrade = console.next();\n-                     updateSuccess = sm.update(id, newGrade, choice, new Student());\n-                 }\n-     \n-                 if (updateSuccess) {\n-                     System.out.println(\"Update successful!\");\n-                 } else {\n-                     System.out.println(\"Something went wrong. Please, try again.\");\n-                 }\n-                 break;\n-     \n-             case 4:\n-                 System.out.println(\"Delete a student\");\n-                 System.out.print(\"Enter the ID to delete: \");\n-                 id = console.nextInt();\n-                 boolean deleteSuccess = sm.delete(id);\n-     \n-                 if (deleteSuccess) {\n-                     System.out.println(\"The record deleted successfully!\");\n-                 } else {\n-                     System.out.println(\"Something went wrong. Please, try again.\");\n-                 }\n-                 break;\n-     \n-             case 5:\n-                 System.out.println(\"Search for a student\");\n-                 System.out.print(\"Enter the ID: \");\n-                 id = console.nextInt();\n-                 boolean found = sm.searchForStudent(id);\n-     \n-                 if (!found) {\n-                     System.out.println(\"Student with this ID is not available in our system.\");\n-                 }\n-                 break;\n-     \n-             case 9:\n-                 System.out.println(\"Thank you for using Student Management Application!\");\n-                 System.exit(0);\n-                 break;\n-     \n-             default:\n-                 System.out.println(\"Invalid selection. Please try again.\");\n-                  break;\n-                }\n-         }\n-    }\n-}\n-\n    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1734521020513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n package pms.main;\n \n-\n+import java.util.InputMismatchException;\n import java.util.Scanner;\n \n \n import pms.student.Student;\n"
                },
                {
                    "date": 1734521504221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,14 @@\n package pms.main;\n \n import java.util.InputMismatchException;\n+\n+\n+\n+import java.util.InputMismatchException;\n import java.util.Scanner;\n \n \n-import pms.student.Student;\n import pms.studentmanagement.StudentManagement;\n \n public class StudentManagementSystem {\n     static Scanner console = new Scanner(System.in);\n@@ -13,111 +16,88 @@\n     public static void main(String[] args) {\n         StudentManagement sm = new StudentManagement();\n         System.out.println(\"STUDENT MANAGEMENT SYSTEM:\");\n \n-      while (true) {\n+     while (true) {\n          System.out.println(\"\\n MENU\");\n          System.out.println(\"1: Add new student.\");\n          System.out.println(\"2: View all students.\");\n          System.out.println(\"3: Update student details.\");\n          System.out.println(\"4: Delete a student.\");\n          System.out.println(\"5: Search for a student.\");\n+         System.out.println(\"6: Sort students(by Name or Grade.\");\n+         System.out.println(\"7: Save records to file.\");\n+         System.out.println(\"8: Load records from file.\");\n          System.out.println(\"9: Exit program.\");\n          System.out.print(\"Enter your selection: \");\n+\n+       try{\n          \n          int sel = console.nextInt();\n      \n          switch (sel) {\n-             case 1:\n-                 System.out.println(\"Add student\");\n-                 System.out.print(\"Enter student name: \");\n-                 String name = console.next();\n-                 System.out.print(\"Enter student age: \");\n-                 int age = console.nextInt();\n-                 System.out.print(\"Enter student grade: \");\n-                 String grade = console.next();\n+            \n+             case 6:\n+                  System.out.println(\"Sort students by:\");\n+                  System.out.println(\"1: name\");\n+                  System.out.println(\"2: Grade\");\n+                  System.out.print(\"Enter you choice:\");\n+                  int sortChoice = console.nextInt();\n+\n+                  if(sortChoice ==1){\n+                    sm.sortByName();\n+                  }\n+                  else if(sortChoice ==2){\n+                    sm.sortByGrade();\n+                  }\n+                  else{\n+                    System.out.println(\"Invalid choice\");\n+                  }\n+                  break;\n+\n+                  case 7:\n+                    System.out.print(\"Enter the file Name to save:\");\n+                    String saveFile = console.next();\n+                    sm.saveToFile(saveFile);\n+                    break;\n+\n+                  case 8:\n+                    System.out.print(\"Enter the file name to load:\");\n+                    String loadFile = console.next();\n+                    StudentManagement.loadFromFile(loadFile);\n+                    break;\n+\n+\n+                  case 9:\n+                      System.out.println(\"Thank you for using the Student Management application!\");\n+                      console.close();\n+                      System.exit(0);\n+                      break;\n+                    \n+                 default:\n+                      System.out.println(\"Invalid selection. Please choose a valid option\");\n+                     break;\n+                }\n+        }\n+                \n+\n+                 catch(InputMismatchException e){\n+                    System.out.println(\"Invalid input. Please enter a valid numeric ID\");\n+                   console.nextLine();  // Clear invalid input\n+                   }\n+                }\n+            \n+        \n+                \n+\n+             \n      \n-                 Student st = new Student(age, name, grade);\n-                 boolean ans = sm.insertStudent(st);\n-                 if (ans) {\n-                     System.out.println(\"Record inserted successfully!\");\n-                 } else {\n-                     System.out.println(\"Something went wrong. Please, try again.\");\n-                 }\n-                 break;\n+             \n      \n-             case 2:\n-                 System.out.println(\"View all students\");\n-                 sm.showAllStudents();\n-                 break;\n-     \n-             case 3:\n-                 System.out.println(\"Update student details\");\n-                 System.out.println(\"\\n 1: Update name\"\n-                                    + \"\\n 2: Update age\"\n-                                    + \"\\n 3: Update grade\");\n-                 System.out.print(\"Enter your choice: \");\n-                 int choice = console.nextInt();\n-     \n-                 System.out.print(\"Enter student ID to update: \");\n-                 int id = console.nextInt();\n-     \n-                 boolean updateSuccess = false;\n-                 if (choice == 1) {\n-                     System.out.print(\"Enter new name: \");\n-                     String newName = console.next();\n-                     updateSuccess = sm.update(id, newName,choice,  new Student());\n-                 } else if (choice == 2) {\n-                     System.out.print(\"Enter new age: \");\n-                     int newAge = console.nextInt();\n-                     updateSuccess = sm.update(id, String.valueOf(newAge),choice, new Student());\n-                 } else if (choice == 3) {\n-                     System.out.print(\"Enter new grade: \");\n-                     String newGrade = console.next();\n-                     updateSuccess = sm.update(id, newGrade, choice, new Student());\n-                 }\n-     \n-                 if (updateSuccess) {\n-                     System.out.println(\"Update successful!\");\n-                 } else {\n-                     System.out.println(\"Something went wrong. Please, try again.\");\n-                 }\n-                 break;\n-     \n-             case 4:\n-                 System.out.println(\"Delete a student\");\n-                 System.out.print(\"Enter the ID to delete: \");\n-                 id = console.nextInt();\n-                 boolean deleteSuccess = sm.delete(id);\n-     \n-                 if (deleteSuccess) {\n-                     System.out.println(\"The record deleted successfully!\");\n-                 } else {\n-                     System.out.println(\"Something went wrong. Please, try again.\");\n-                 }\n-                 break;\n-     \n-             case 5:\n-                 System.out.println(\"Search for a student\");\n-                 System.out.print(\"Enter the ID: \");\n-                 id = console.nextInt();\n-                 boolean found = sm.searchForStudent(id);\n-     \n-                 if (!found) {\n-                     System.out.println(\"Student with this ID is not available in our system.\");\n-                 }\n-                 break;\n-     \n-             case 9:\n-                 System.out.println(\"Thank you for using Student Management Application!\");\n-                 System.exit(0);\n-                 break;\n-     \n-             default:\n-                 System.out.println(\"Invalid selection. Please try again.\");\n-                  break;\n-                }\n-         }\n+             \n+         \n     }\n }\n \n+\n+   \n    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1734525198115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n import java.util.InputMismatchException;\n \n \n \n-import java.util.InputMismatchException;\n import java.util.Scanner;\n \n \n import pms.studentmanagement.StudentManagement;\n"
                }
            ],
            "date": 1734511340922,
            "name": "Commit-0",
            "content": "package pms.main;\n\nimport java.util.InputMismatchException;\nimport java.util.Scanner;\n\n\nimport pms.student.Student;\nimport pms.studentmanagement.StudentManagement;\n\npublic class StudentManagementSystem {\n    static Scanner console = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        StudentManagement sm = new StudentManagement();\n        System.out.println(\"STUDENT MANAGEMENT SYSTEM:\");\n\n      while (true) {\n         System.out.println(\"\\n MENU\");\n         System.out.println(\"1: Add new student.\");\n         System.out.println(\"2: View all students.\");\n         System.out.println(\"3: Update student details.\");\n         System.out.println(\"4: Delete a student.\");\n         System.out.println(\"5: Search for a student.\");\n         System.out.println(\"9: Exit program.\");\n         System.out.print(\"Enter your selection: \");\n         \n         int sel = console.nextInt();\n     \n         switch (sel) {\n             case 1:\n                 System.out.println(\"Add student\");\n                 System.out.print(\"Enter student name: \");\n                 String name = console.next();\n                 System.out.print(\"Enter student age: \");\n                 int age = console.nextInt();\n                 System.out.print(\"Enter student grade: \");\n                 String grade = console.next();\n     \n                 Student st = new Student(age, name, grade);\n                 boolean ans = sm.insertStudent(st);\n                 if (ans) {\n                     System.out.println(\"Record inserted successfully!\");\n                 } else {\n                     System.out.println(\"Something went wrong. Please, try again.\");\n                 }\n                 break;\n     \n             case 2:\n                 System.out.println(\"View all students\");\n                 sm.showAllStudents();\n                 break;\n     \n             case 3:\n                 System.out.println(\"Update student details\");\n                 System.out.println(\"\\n 1: Update name\"\n                                    + \"\\n 2: Update age\"\n                                    + \"\\n 3: Update grade\");\n                 System.out.print(\"Enter your choice: \");\n                 int choice = console.nextInt();\n     \n                 System.out.print(\"Enter student ID to update: \");\n                 int id = console.nextInt();\n     \n                 boolean updateSuccess = false;\n                 if (choice == 1) {\n                     System.out.print(\"Enter new name: \");\n                     String newName = console.next();\n                     updateSuccess = sm.update(id, newName,choice,  new Student());\n                 } else if (choice == 2) {\n                     System.out.print(\"Enter new age: \");\n                     int newAge = console.nextInt();\n                     updateSuccess = sm.update(id, String.valueOf(newAge),choice, new Student());\n                 } else if (choice == 3) {\n                     System.out.print(\"Enter new grade: \");\n                     String newGrade = console.next();\n                     updateSuccess = sm.update(id, newGrade, choice, new Student());\n                 }\n     \n                 if (updateSuccess) {\n                     System.out.println(\"Update successful!\");\n                 } else {\n                     System.out.println(\"Something went wrong. Please, try again.\");\n                 }\n                 break;\n     \n             case 4:\n                 System.out.println(\"Delete a student\");\n                 System.out.print(\"Enter the ID to delete: \");\n                 id = console.nextInt();\n                 boolean deleteSuccess = sm.delete(id);\n     \n                 if (deleteSuccess) {\n                     System.out.println(\"The record deleted successfully!\");\n                 } else {\n                     System.out.println(\"Something went wrong. Please, try again.\");\n                 }\n                 break;\n     \n             case 5:\n                 System.out.println(\"Search for a student\");\n                 System.out.print(\"Enter the ID: \");\n                 id = console.nextInt();\n                 boolean found = sm.searchForStudent(id);\n     \n                 if (!found) {\n                     System.out.println(\"Student with this ID is not available in our system.\");\n                 }\n                 break;\n     \n             case 9:\n                 System.out.println(\"Thank you for using Student Management Application!\");\n                 System.exit(0);\n                 break;\n     \n             default:\n                 System.out.println(\"Invalid selection. Please try again.\");\n                  break;\n                }\n         }\n    }\n}\n\n   "
        }
    ]
}