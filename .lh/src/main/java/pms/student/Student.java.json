{
    "sourceFile": "src/main/java/pms/student/Student.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1734519079505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734519138698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n         this.age = 0;     //default age\n         this.grade = \"\";  //default grade\n     }\n \n-        //Constructors with parameters\n-    public Student( int age, String name, String grade)\n+        //Constructor with parameters\n+    public Student(int id, String name, int age, String grade)\n     {\n         this.id = id;\n         this.name = name;\n         this.age = age;\n"
                },
                {
                    "date": 1734519261485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n         this.age = 0;     //default age\n         this.grade = \"\";  //default grade\n     }\n \n-        //Constructor with parameters\n-    public Student(int id, String name, int age, String grade)\n+        //Constructors with parameters\n+    public Student( int age, String name, String grade)\n     {\n         this.id = id;\n         this.name = name;\n         this.age = age;\n"
                },
                {
                    "date": 1734519281947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n         this.age = 0;     //default age\n         this.grade = \"\";  //default grade\n     }\n \n-        //Constructors with parameters\n-    public Student( int age, String name, String grade)\n+        //Constructor with parameters\n+    public Student(int id, String name, int age, String grade)\n     {\n         this.id = id;\n         this.name = name;\n         this.age = age;\n"
                },
                {
                    "date": 1734519366114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n         this.age = 0;     //default age\n         this.grade = \"\";  //default grade\n     }\n \n-        //Constructor with parameters\n-    public Student(int id, String name, int age, String grade)\n+        //Constructors with parameters\n+    public Student( int age, String name, String grade)\n     {\n         this.id = id;\n         this.name = name;\n         this.age = age;\n"
                },
                {
                    "date": 1734522248103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,12 @@\n         public String toString()\n         {\n             return \"ID:\" + id + \", Name:\" + name + \",Age:\" + age + \",Grade:\" + grade;\n         }\n+\n+\n         \n+       \n \n } \n     \n \n"
                },
                {
                    "date": 1734522410622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+package pms.student;\n+\n+\n+\n+\n+public class Student {\n+      //declare variables\n+  private int id;\n+  private String name;\n+  private int age;\n+  private String grade;\n+  \n+  \n+  \n+    \n+        //Default constructor\n+    public Student(){\n+        this.id = 0;      //default id\n+        this.name = \"\";   // default name\n+        this.age = 0;     //default age\n+        this.grade = \"\";  //default grade\n+    }\n+\n+        //Constructors with parameters\n+    public Student( int age, String name, String grade)\n+    {\n+        this.id = id;\n+        this.name = name;\n+        this.age = age;\n+        this.grade = grade;\n+    }\n+            //Getters and Setters and validations\n+        public int getId(){\n+            return id;\n+        }\n+        public void setId(int id){\n+        if(id<=0){\n+            throw new IllegalArgumentException(\"ID must be greater than 0.\");\n+        }\n+\n+            this.id = id;\n+        }\n+        public String getName()\n+        {\n+            return name;\n+        }\n+        public void setName(String name){\n+          if(name == null || name.trim().isEmpty()){ \n+            throw new IllegalArgumentException(\"The name can't be null or empty.\");\n+        }       \n+            this.name = name;\n+        }\n+        public String getGrade()\n+        {\n+            return grade;\n+        }\n+        public void setGrade(String grade){\n+            if(grade == null || grade.trim().isEmpty()){\n+                throw new IllegalArgumentException(\"The grade can't be null or empty\");\n+            }\n+            this.grade = grade;\n+        }\n+        public int getAge()\n+        {\n+            return age;\n+        }   \n+        public void setAge(int age){\n+            if(age<=0 ){\n+                throw new IllegalArgumentException(\"The age can't be zero\");\n+            }\n+           this.age = age;\n+        }\n+        @Override\n+        public String toString()\n+        {\n+            return \"ID:\" + id + \", Name:\" + name + \",Age:\" + age + \",Grade:\" + grade;\n+        }\n+        \n+\n+} \n+    \n+\n"
                },
                {
                    "date": 1734522465279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n         this.age = 0;     //default age\n         this.grade = \"\";  //default grade\n     }\n \n-        //Constructors with parameters\n-    public Student( int age, String name, String grade)\n+        //Constructor with parameters\n+    public Student(int id, String name, int age, String grade)\n     {\n         this.id = id;\n         this.name = name;\n         this.age = age;\n@@ -74,94 +74,11 @@\n         public String toString()\n         {\n             return \"ID:\" + id + \", Name:\" + name + \",Age:\" + age + \",Grade:\" + grade;\n         }\n-        \n \n-} \n-    \n-\n-package pms.student;\n-\n-\n-\n-\n-public class Student {\n-      //declare variables\n-  private int id;\n-  private String name;\n-  private int age;\n-  private String grade;\n-  \n-  \n-  \n-    \n-        //Default constructor\n-    public Student(){\n-        this.id = 0;      //default id\n-        this.name = \"\";   // default name\n-        this.age = 0;     //default age\n-        this.grade = \"\";  //default grade\n-    }\n-\n-        //Constructors with parameters\n-    public Student( int age, String name, String grade)\n-    {\n-        this.id = id;\n-        this.name = name;\n-        this.age = age;\n-        this.grade = grade;\n-    }\n-            //Getters and Setters and validations\n-        public int getId(){\n-            return id;\n-        }\n-        public void setId(int id){\n-        if(id<=0){\n-            throw new IllegalArgumentException(\"ID must be greater than 0.\");\n-        }\n-\n-            this.id = id;\n-        }\n-        public String getName()\n-        {\n-            return name;\n-        }\n-        public void setName(String name){\n-          if(name == null || name.trim().isEmpty()){ \n-            throw new IllegalArgumentException(\"The name can't be null or empty.\");\n-        }       \n-            this.name = name;\n-        }\n-        public String getGrade()\n-        {\n-            return grade;\n-        }\n-        public void setGrade(String grade){\n-            if(grade == null || grade.trim().isEmpty()){\n-                throw new IllegalArgumentException(\"The grade can't be null or empty\");\n-            }\n-            this.grade = grade;\n-        }\n-        public int getAge()\n-        {\n-            return age;\n-        }   \n-        public void setAge(int age){\n-            if(age<=0 ){\n-                throw new IllegalArgumentException(\"The age can't be zero\");\n-            }\n-           this.age = age;\n-        }\n-        @Override\n-        public String toString()\n-        {\n-            return \"ID:\" + id + \", Name:\" + name + \",Age:\" + age + \",Grade:\" + grade;\n-        }\n-\n-\n         \n-       \n+        \n \n } \n     \n \n"
                }
            ],
            "date": 1734519079505,
            "name": "Commit-0",
            "content": "package pms.student;\n\n\n\n\npublic class Student {\n      //declare variables\n  private int id;\n  private String name;\n  private int age;\n  private String grade;\n  \n  \n  \n    \n        //Default constructor\n    public Student(){\n        this.id = 0;      //default id\n        this.name = \"\";   // default name\n        this.age = 0;     //default age\n        this.grade = \"\";  //default grade\n    }\n\n        //Constructors with parameters\n    public Student( int age, String name, String grade)\n    {\n        this.id = id;\n        this.name = name;\n        this.age = age;\n        this.grade = grade;\n    }\n            //Getters and Setters and validations\n        public int getId(){\n            return id;\n        }\n        public void setId(int id){\n        if(id<=0){\n            throw new IllegalArgumentException(\"ID must be greater than 0.\");\n        }\n\n            this.id = id;\n        }\n        public String getName()\n        {\n            return name;\n        }\n        public void setName(String name){\n          if(name == null || name.trim().isEmpty()){ \n            throw new IllegalArgumentException(\"The name can't be null or empty.\");\n        }       \n            this.name = name;\n        }\n        public String getGrade()\n        {\n            return grade;\n        }\n        public void setGrade(String grade){\n            if(grade == null || grade.trim().isEmpty()){\n                throw new IllegalArgumentException(\"The grade can't be null or empty\");\n            }\n            this.grade = grade;\n        }\n        public int getAge()\n        {\n            return age;\n        }   \n        public void setAge(int age){\n            if(age<=0 ){\n                throw new IllegalArgumentException(\"The age can't be zero\");\n            }\n           this.age = age;\n        }\n        @Override\n        public String toString()\n        {\n            return \"ID:\" + id + \", Name:\" + name + \",Age:\" + age + \",Grade:\" + grade;\n        }\n        \n\n} \n    \n\n"
        }
    ]
}